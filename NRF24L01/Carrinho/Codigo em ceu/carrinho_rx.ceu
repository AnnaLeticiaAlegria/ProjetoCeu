#include "int0.ceu"
#include "out.ceu"
#include "spi.ceu"
#include "pcint2.ceu" //usar pinos 3  (PCINT19), 4  (PCINT20),5 (PCINT21),6 (PCINT22) para os motores --> 3 e 4 para o motor 1 e 5 e 6 para o motor 2

#define NRF24L01_IRQ INT0
#include "nrf24l01.ceu"
#include "usart.ceu"
#include "string.ceu"


call PCINT2_Enable(_PCINT19, on); 
call PCINT2_Enable(_PCINT20, on); 
call PCINT2_Enable(_PCINT21, on); 
call PCINT2_Enable(_PCINT22, on); 

spawn USART_Init(9600);
var[20] byte str = [] .. "Carrinho_rx\n\r";
await USART_Tx(&str);

var Lock spi = _;

var NRF24L01_Data nrf = val NRF24L01_Data(&spi, 8,7, _,_,_,_,_,_,_);
spawn NRF24L01_Init(&nrf);
await nrf.ok; // espera o rádio dar o sinal de ok

var int i;
loop i do
    
    
    var [1] byte buf = [];
    
    await NRF24L01_Rx(&nrf, &buf);
    str = [] .. "> ";
    call String_Append_INT(&str, buf[0], _);
    call String_Append_STR(&str, "\n\r");
    await USART_Tx(&str);
    
    var byte value = buf[0];
    
    if (value == 15) then//{0b00001111}) then 
        // stop
        emit OUT(_PCINT19, low);
        emit OUT(_PCINT20, low);
        emit OUT(_PCINT21, low);
        emit OUT(_PCINT22, low);
    
        //{ Serial.println("LLLL"); _DELAY(10);}
        
    else/if (value == {0b00001011}) then
        // move forward
        emit OUT(_PCINT19, high);
        emit OUT(_PCINT20, low );
        emit OUT(_PCINT21, low );
        emit OUT(_PCINT22, high);
        
        //{ Serial.println("HLLH"); _DELAY(10);}
            
    else/if (value == {0b00000111}) then
        // move backward
        emit OUT(_PCINT19, low );
        emit OUT(_PCINT20, high);
        emit OUT(_PCINT21, high);
        emit OUT(_PCINT22, low );
    
        //{ Serial.println("LHHL"); _DELAY(10);}
            
    else/if (value == {0b00001110}) then
        // move right
        emit OUT(_PCINT19, low );
        emit OUT(_PCINT20, low );
        emit OUT(_PCINT21, low );
        emit OUT(_PCINT22, high);

        //{ Serial.println("LLLH"); _DELAY(10);}
            
    else/if (value == {0b00001101}) then
        // move left
        emit OUT(_PCINT19, high);
        emit OUT(_PCINT20, low );
        emit OUT(_PCINT21, low );
        emit OUT(_PCINT22, low );

        //{ Serial.println("HLLL"); _DELAY(10);}
                    
    else 
        // stop
        emit OUT(_PCINT19, low);
        emit OUT(_PCINT20, low);
        emit OUT(_PCINT21, low);
        emit OUT(_PCINT22, low);
    
        //{ Serial.println("LLLL"); _DELAY(10);}
        
    end
end

#if 0 

buf = 15  -> recebeu 00001111 --> nenhum botão pressionado
buf = 14  -> recebeu 00001110 --> botão 3 pressionado (direita)
buf = 13  -> recebeu 00001101 --> botão 4 pressionado (esquerda)
buf = 11  -> recebeu 00001011 --> botão 5 pressionado (frente)
buf = 7   -> recebeu 00000111 --> botão 6 pressionado (trás)
qualquer outro valor -> carro fica parado

#endif
