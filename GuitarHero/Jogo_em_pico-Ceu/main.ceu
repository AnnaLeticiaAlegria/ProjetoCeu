emit WINDOW_SET_TITLE("GuitarHero");
emit WINDOW_SET_SIZE(600,600,60,60);
emit WINDOW_SET_CLEAR_COLOR_RGB(0,0,0);
emit WINDOW_SET_GRID(no);

var integer points=0;
var bool buttonPressed = false; 
var integer numberOfNotes = 123;

code/await Bar (var Color barColor, var int position, var& int tam) -> NEVER do
  every FRAMES_REDRAW do
  
    var integer i;
    loop i in [tam-15 -> 15] do
      emit GRAPHICS_SET_COLOR_NAME(COLOR_WHITE);
      emit GRAPHICS_DRAW_PIXEL(i,position);
    end
    loop i in [0 -> tam[ do
      emit GRAPHICS_SET_COLOR_NAME(barColor);
      emit GRAPHICS_DRAW_PIXEL(i - 15,position);
    end
  end
end

code/await  ProgressBar (none) -> none do
  var integer j=0;
  
  spawn Bar (COLOR_GREEN, 19, &j);
  spawn Bar (COLOR_GREEN, 20, &j);

  loop do
    await 3s;
    j = j + 1;
    if j > 31 then
      j = 31;
    end
  end

end

code/await PointsBar (none) -> NEVER do

  var integer j = outer.points* 31/(20*(outer.numberOfNotes));
  
  spawn Bar (COLOR_RED, 17, &j);
  
  every FRAMES_UPDATE do
    j = outer.points* 31/(20*(outer.numberOfNotes));
    if j>31 then
      j = 31;
    end
    
#if 0
    var[10] byte str;
    _snprintf(&&str[0],10, "%d", outer.points);
    emit GRAPHICS_DRAW_TEXT(0,0,&&str[0]);
#endif

  end
  
end

code/await NoteBase (var integer num) -> none do

  every FRAMES_REDRAW do
    if num == 1 then
      emit GRAPHICS_SET_BMP_SIZE(5,5);
      emit GRAPHICS_DRAW_BMP(-12,-15, "imagens/base1a.bmp");
    else/if num == 2 then
      emit GRAPHICS_SET_BMP_SIZE(5,5);
      emit GRAPHICS_DRAW_BMP(0,-15, "imagens/base2a.bmp");
    else
      emit GRAPHICS_SET_BMP_SIZE(5,5);
      emit GRAPHICS_DRAW_BMP(12,-15, "imagens/base3a.bmp");
    end
  end
end

code/await Note (var integer num) -> none do
  var integer j = 0;
  var integer s = 0;
  var integer v = 50;
  par/or do
    loop do
        var integer dt = await FRAMES_UPDATE;
        s = s + v*dt/1000;
        if s >= 48 then
            break;
        end
    end
  with
    var integer keycode;
    if num == 1 then
      keycode = 97;   //a
    else/if num == 2 then
      keycode = 115;  //s
    else
      keycode = 100;  //d
    end
    var integer key = await KEY_PRESS until key==keycode and outer.buttonPressed == false;
    
    outer.buttonPressed = true;
    if (13-s) < -10 and (13-s) > -25 then
      //var integer diff = [[math.abs(-15 - (14-@s))]];
      var integer diff = -15 - (14-s);
      if diff<0 then
        diff = -diff;
      end

      if diff == 0 or diff == 1 then
        outer.points = outer.points + 20;
      else/if diff == 2 or diff == 3 then
        outer.points = outer.points + 15;
      else/if diff == 4 then
        outer.points = outer.points + 10;
      end
    else
      if outer.points >= 5 then
        outer.points = outer.points - 5;
      else 
        outer.points = 0;
      end
    end
  with
    every FRAMES_REDRAW do
      if num == 1 then
        emit GRAPHICS_SET_BMP_SIZE(5,5);
        emit GRAPHICS_DRAW_BMP(-12,14-s, "imagens/nota1a.bmp");
      else/if num == 2 then
        emit GRAPHICS_SET_BMP_SIZE(5,5);
        emit GRAPHICS_DRAW_BMP(0,14-s, "imagens/nota2a.bmp");
      else
        emit GRAPHICS_SET_BMP_SIZE(5,5);
        emit GRAPHICS_DRAW_BMP(12,14-s, "imagens/nota3a.bmp");
      end
    end
  end
end


emit FRAMES_SET(no);
emit WINDOW_CLEAR();
emit GRAPHICS_SET_FONT("tiny.ttf", 8);
emit GRAPHICS_DRAW_TEXT(0,10,"PRESS ENTER");
await 1s;
emit GRAPHICS_DRAW_TEXT(0,-10,"TO START");
  
var integer key = await KEY_PRESS until key==13; //começa o jogo após apertar o enter
await 1s;

emit FRAMES_SET(yes);

emit SOUND_SET_VOLUME(100);
emit SOUND_PLAY("/home/annaleticia/ProjetoCeu/GuitarHero/Jogo_em_pico-Ceu/NoGameNoLife-INSTRUMENTAL.mp3");
emit WINDOW_CLEAR();

spawn ProgressBar();
spawn PointsBar();
spawn NoteBase(1);
spawn NoteBase(2);
spawn NoteBase(3);


[[
    dofile 'musica.lua'
]]

var int noteNum = [[ #MUSICA ]];
  
spawn do
    every KEY_PRESS do
        buttonPressed = false;
    end
end

pool[] Note notes;

var int noteTime = [[ MUSICA[1][1]*1000 ]];
await (noteTime)ms;

var int i;
loop i in [1 -> noteNum[ do
    var int noteType = [[ MUSICA[@i][2] ]];
    spawn Note(noteType) in notes;
    noteTime = [[ (MUSICA[@i+1][1] - MUSICA[@i][1])*1000 ]];
    await (noteTime)ms;
end

var int noteType = [[ MUSICA[@noteNum][2] ]];
spawn Note(noteType);

//_ceu_assert(0,"aaa");

await 2s;
var real perc = points*100/(20*numberOfNotes);

every FRAMES_REDRAW do
  emit GRAPHICS_SET_COLOR_NAME(COLOR_WHITE);
  emit GRAPHICS_SET_FONT("tiny.ttf", 8);
  if perc >= 80 then
    emit GRAPHICS_DRAW_TEXT(0,0,"GREAT!!");
  else/if perc >= 70 then
    emit GRAPHICS_DRAW_TEXT(0,0,"GOOD");
  else
    emit GRAPHICS_DRAW_TEXT(0,0,"TRY AGAIN!");
  end
end
  
await FOREVER;
