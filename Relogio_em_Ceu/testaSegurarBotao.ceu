#include "gpio.ceu"

output bool PIN_13; /*LED1*/
output bool PIN_12; /*LED2*/
output bool PIN_11; /*LED3*/
output bool PIN_10; /*LED4*/


//para os LEDs comeÃ§arem apagados
emit PIN_10(true);
emit PIN_11(true);
emit PIN_12(true);
emit PIN_13(true);

input (int,bool) PIN_;
code/await Pin_ (var int pin) -> NEVER do
	{ pinMode(@pin, INPUT); }
	var bool v1 = _digitalRead(pin) as bool;
	loop do
		await 50ms;
		var bool v2 = _digitalRead(pin) as bool;
		if v1 != v2 then
			v1 = v2;
      await async (pin,v1) do
	      emit PIN_(pin,v1);
      end
    end
	end
end

spawn Pin_(_A1);
spawn Pin_(_A2);
spawn Pin_(_A3);

code/await Segurou_botao (var bool b1, var bool b2, var bool b3) -> none do
loop do
      var int pin=_A1;
      var bool v=b1;
      loop do
          par/or do
              await 100ms;
          with
              par/and do
                  if b1 == true then
                    (pin,v) = await PIN_ until pin==_A1 and v==false;
                  else
                    (pin,v) = await PIN_ until pin!=_A1;
                  end
              with
                  if b2 == true then
                    (pin,v) = await PIN_ until pin==_A2 and v==false;
                  else
                    (pin,v) = await PIN_ until pin!=_A2;
                  end
              with
                  if b3 == true then
                    (pin,v) = await PIN_ until pin==_A3 and v==false;
                  else
                    (pin,v) = await PIN_ until pin!=_A3;
                  end
              end
              break;
          end
      end
      
      par/or do
          par/and do
              if b1==true then
                (pin,v) = await PIN_ until pin==_A1 and v==b1;
              end
          with
              if b2==true then
                (pin,v) = await PIN_ until pin==_A2 and v==b2;
              end
          with
              if b3==true then
                (pin,v) = await PIN_ until pin==_A3 and v==b3;
              end
          end
      with
          await 2s;
          break;
      end
  end
end

code/await Pisca (var int pin) -> NEVER do
	loop do
		emit PIN (pin,true);
		await 1s;
    emit PIN (pin,false);
    await 1s;
	end
end

loop do
    par do
     // await Segurou_botao(true,false,true);
      await Segurou_botao(true,false,true);
      await Pisca(13);
    with
      await Segurou_botao(true,false,false);
      await Pisca(12);
    with
      await Segurou_botao(false,true,false);
      await Pisca(11);
    with
      await Segurou_botao(false,false,true);
      await Pisca(10);  
	end
end
